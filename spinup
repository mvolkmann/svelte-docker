#!/usr/bin/env bash

APP_NAME=svelte-app
IMAGE_NAME=svelte-project
CONTAINER_NAME=svelte-project
USER_NAME=node
CONTAINER_DIR=/home/$USER_NAME/$APP_NAME

# Build a Docker image using the Dockerfile in the current directory.
docker build -t $IMAGE_NAME .

# Get the image id.
imageId=`docker images $IMAGE_NAME --format "{{.ID}}"`
echo Docker image id is $imageId

# Stop the running container if it exists.
# It will be automatcally deleted because
# the --rm option was used when it was created.
docker ps --quiet --filter "name=$CONTAINER_NAME" | grep --quiet . && docker stop $CONTAINER_NAME

# Delete dangling images and stopped containers..
docker system prune --force

if [ ! -d $APP_NAME ]
then
  # Create a starting point for a new Svelte app.
  npx degit sveltejs/template $APP_NAME
  pushd $APP_NAME
  npm install
  popd
fi

# Run the image inside a container.
docker run \
  --detach \
  --interactive \
  --name "$CONTAINER_NAME" \
  --publish 5000:5000 \
  --rm \
  --tty \
  --volume $(pwd)/$APP_NAME:/home/$USER_NAME/$APP_NAME \
  "$IMAGE_NAME"
  #--mount source=$(pwd)/$APP_NAME,target=/home/$USER_NAME/$APP_NAME \

# Get the container id.
containerId=`docker ps --last 1 --quiet`
echo Docker container id is $containerId

# Open a shell inside the container.
echo Opening a shell inside the container ...
docker exec -it $containerId /bin/bash

